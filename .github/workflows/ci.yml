name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Rust tests on ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        #os: [ ubuntu-latest, windows-latest ]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup update
      - uses: taiki-e/install-action@just
      - uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: just test

  fmt:
    name: Rustfmt
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup update
      - name: Run rustfmt
        run: cargo fmt --all --check --verbose

  clippy:
    name: Clippy on ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup update stable
      - uses: taiki-e/install-action@just
      - uses: Swatinem/rust-cache@v2
    
      - name: Run clippy
        run: cargo clippy --workspace --all-features
